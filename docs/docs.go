// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Hamid Baehaqi",
            "email": "hamid1bae1@gmail.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/auth/login": {
            "post": {
                "description": "login user to get auth token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "login",
                "parameters": [
                    {
                        "description": "login info",
                        "name": "loginBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.Login"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth.Token"
                        }
                    }
                }
            }
        },
        "/v1/auth/refresh-token": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "refresh token to extend token expiry, required auth with refresh_token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "refresh token",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth.Token"
                        }
                    }
                }
            }
        },
        "/v1/auth/register": {
            "post": {
                "description": "field date_of_birth should use pattern \"yyyy-mm-dd\"",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "register",
                "parameters": [
                    {
                        "description": "user credential",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.UserDto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/user.UserCreatedDto"
                        }
                    }
                }
            }
        },
        "/v1/comment": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "add comment, auth required",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comment"
                ],
                "summary": "add comment to post",
                "parameters": [
                    {
                        "description": "comment info",
                        "name": "comment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/comment.AddCommentInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/comment.CommentDto"
                        }
                    }
                }
            }
        },
        "/v1/comment/{id}": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "update comment, auth required",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comment"
                ],
                "summary": "update comment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "comment id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "comment info",
                        "name": "comment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/comment.UpdateCommentInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/comment.CommentDto"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "delete comment, auth required",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comment"
                ],
                "summary": "delete comment by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "comment id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/v1/photo": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "get photos, auth required. without query will get authenticated photos. with query will get photos from user with id in query",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "photo"
                ],
                "summary": "get photos from user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "user id",
                        "name": "user_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/photo.PhotoDetailDto"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "add photo, auth required",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "photo"
                ],
                "summary": "add photo",
                "parameters": [
                    {
                        "description": "photo info",
                        "name": "photo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/photo.AddPhotoInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/photo.PhotoDto"
                        }
                    }
                }
            }
        },
        "/v1/photo/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "get photo by photo id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "photo"
                ],
                "summary": "get photo by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "photo id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/photo.PhotoDetailDto"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "update photo, auth required",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "photo"
                ],
                "summary": "update photo",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "photo id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "photo info",
                        "name": "photo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/photo.UpdatePhotoInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/photo.PhotoDto"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "delete photo, auth required",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "photo"
                ],
                "summary": "delete photo by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "photo id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/v1/social-media": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "list all social media from logged in user, auth required",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "social-media"
                ],
                "summary": "get social media from logged in user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/socialmedia.SocialMedia"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "add social media to user, auth required",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "social-media"
                ],
                "summary": "add social media to user",
                "parameters": [
                    {
                        "description": "social media info",
                        "name": "socialmedia",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/socialmedia.AddSocialMediaInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/socialmedia.SocialMedia"
                        }
                    }
                }
            }
        },
        "/v1/social-media/{id}": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "update social media, auth required",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "social-media"
                ],
                "summary": "update social media",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "social media id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "social media info",
                        "name": "socialmedia",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/socialmedia.UpdateSocialMediaInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/socialmedia.SocialMedia"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "delete social media, auth required",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "social-media"
                ],
                "summary": "delete social media",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "social media id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/v1/user": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "update user, auth required",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "update user",
                "parameters": [
                    {
                        "description": "user info",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.UserUpdateDto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/user.UserUpdateResponseDto"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "delete user, auth required",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "delete user",
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/v1/user/{id}": {
            "get": {
                "description": "get user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "get user by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "user id",
                        "name": "id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.UserWithSocialMediaDto"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "auth.Login": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "luigi@mail.com"
                },
                "password": {
                    "type": "string",
                    "minLength": 6,
                    "example": "password"
                }
            }
        },
        "auth.Token": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                },
                "token_id": {
                    "type": "string"
                }
            }
        },
        "comment.AddCommentInput": {
            "type": "object",
            "required": [
                "message",
                "photo_id"
            ],
            "properties": {
                "message": {
                    "type": "string",
                    "example": "cool"
                },
                "photo_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "comment.CommentDto": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "photo_id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "comment.UpdateCommentInput": {
            "type": "object",
            "required": [
                "message"
            ],
            "properties": {
                "message": {
                    "type": "string",
                    "example": "nice"
                }
            }
        },
        "photo.AddPhotoInput": {
            "type": "object",
            "required": [
                "caption",
                "title",
                "url"
            ],
            "properties": {
                "caption": {
                    "type": "string",
                    "example": "caption"
                },
                "title": {
                    "type": "string",
                    "example": "title"
                },
                "url": {
                    "type": "string",
                    "example": "url"
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "photo.PhotoDetailDto": {
            "type": "object",
            "properties": {
                "caption": {
                    "type": "string"
                },
                "comments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/comment.CommentDto"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "photo.PhotoDto": {
            "type": "object",
            "properties": {
                "caption": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "photo.UpdatePhotoInput": {
            "type": "object",
            "required": [
                "caption",
                "title"
            ],
            "properties": {
                "caption": {
                    "type": "string",
                    "example": "caption"
                },
                "title": {
                    "type": "string",
                    "example": "title"
                }
            }
        },
        "socialmedia.AddSocialMediaInput": {
            "type": "object",
            "required": [
                "name",
                "url"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "example": "instagram"
                },
                "url": {
                    "type": "string",
                    "example": "url"
                }
            }
        },
        "socialmedia.SocialMedia": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "socialmedia.UpdateSocialMediaInput": {
            "type": "object",
            "required": [
                "url"
            ],
            "properties": {
                "url": {
                    "type": "string",
                    "example": "url"
                }
            }
        },
        "user.UserCreatedDto": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "user.UserDto": {
            "type": "object",
            "required": [
                "date_of_birth",
                "email",
                "password",
                "username"
            ],
            "properties": {
                "date_of_birth": {
                    "type": "string",
                    "example": "1999-09-19"
                },
                "email": {
                    "type": "string",
                    "example": "luigi@mail.com"
                },
                "password": {
                    "type": "string",
                    "minLength": 6,
                    "example": "password"
                },
                "username": {
                    "type": "string",
                    "example": "luigi"
                }
            }
        },
        "user.UserUpdateDto": {
            "type": "object",
            "required": [
                "email",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "luigi@mail.com"
                },
                "username": {
                    "type": "string",
                    "example": "luigi"
                }
            }
        },
        "user.UserUpdateResponseDto": {
            "type": "object",
            "properties": {
                "token_id": {
                    "type": "string"
                }
            }
        },
        "user.UserWithSocialMediaDto": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "social_medias": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/socialmedia.SocialMedia"
                    }
                },
                "username": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "description": "\"Type 'Bearer TOKEN' to correctly set the API Key\"",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "MyGram API Documentation",
	Description:      "This is API for user to post something",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
